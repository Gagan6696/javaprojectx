/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package adminui;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.beans.PropertyVetoException;
import javax.swing.table.DefaultTableModel;
import java.util.List;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import model.TO.CompanyInfoTO;
import model.TO.ProductInfoTO;
import model.TO.ProductSubTypeTO;
import model.dao.ProductInfoDAO;
import model.dao.ProductSubtypeDAO;

/**
 *
 * @author user
 */
public class viewproductsubtype extends javax.swing.JInternalFrame {

    List<ProductSubTypeTO> subproducts;
    private JPopupMenu popupmenu;
    int row;
    int subtypeid;

    public viewproductsubtype() {
        initComponents();
        bindcoursetable();
        popupmenu = new JPopupMenu();
        JMenuItem jdeleteitem = new JMenuItem("delete this record");

        jdeleteitem.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                deleterecord();
            }
        });
        popupmenu.add(jdeleteitem);
        JMenuItem jupdateitem = new JMenuItem("update this record");
        jupdateitem.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {

                updaterecord();

            }
        });
        popupmenu.add(jupdateitem);
        row = -1;
        //subtypeid=-1;

    }

    private void deleterecord() {
        if (row != -1 && subproducts != null && row < subproducts.size()) {
            int result = JOptionPane.showConfirmDialog(this, "are you sure to delete  ", "message from system", JOptionPane.YES_NO_OPTION);
            if (result == JOptionPane.YES_OPTION) {
                ProductSubTypeTO pt = subproducts.get(row);
                String message = "";
                ProductSubtypeDAO action = new ProductSubtypeDAO();
                if (action.deleterecord(String.valueOf(pt.getSubtypeid()))) {
                    message = "record is deleted";
                    bindcoursetable();

                } else {
                    message = action.geterrormessage();
                }
                JOptionPane.showMessageDialog(this, message);
            }
        }

        row = -1;
    }

    private void updaterecord() {
       
        if (row != -1) {
                            
ProductSubTypeTO pt = subproducts.get(row);
            Addsubproductinfo apt = new Addsubproductinfo(pt);

            apt.setVisible(true);
            getDesktopPane().add(apt);
            try {
                apt.setSelected(true);

            } catch (PropertyVetoException ex) {

            }

            dispose();

        }
        row = -1;

    }

    public void bindcoursetable() {
        subproducts = new ProductSubtypeDAO().GetAllRecord();
        String[] colnames = {"subtypeid", "subtypename", "typeid"};
        Object[][] records = null;
        if (subproducts.size() > 0 && subproducts != null) {
            records = new Object[subproducts.size()][colnames.length];
            int i = 0;
            for (ProductSubTypeTO pit : subproducts) {
                records[i] = new Object[]{pit.getSubtypeid(), pit.getSubtypename(), pit.getTypeid()};
                i++;
            }

        } else {
            records = new Object[1][colnames.length];
            records[0] = new Object[]{"no records", "no records", "no records"};
        }
        DefaultTableModel dtm = new DefaultTableModel(records, colnames) {

            @Override
            public boolean isCellEditable(int row, int column) {
                return false;

            }

        };
        tableproductsubtype.setAutoCreateRowSorter(true);
        tableproductsubtype.getTableHeader().setReorderingAllowed(false);
        tableproductsubtype.setModel(dtm);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableproductsubtype = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("IMS::view productsub type");

        tableproductsubtype.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableproductsubtype.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableproductsubtypeMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableproductsubtype);

        jButton1.setFont(new java.awt.Font("KodchiangUPC", 1, 36)); // NOI18N
        jButton1.setText("Refresh Records");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 601, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(83, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 58, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        bindcoursetable();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void tableproductsubtypeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableproductsubtypeMouseClicked
        if (evt.getButton() == MouseEvent.BUTTON3) {
            int rowpos = tableproductsubtype.rowAtPoint(evt.getPoint());
            tableproductsubtype.getSelectionModel().setSelectionInterval(rowpos, rowpos);
            popupmenu.show(tableproductsubtype, evt.getX(), evt.getY());
            row = tableproductsubtype.getSelectedRow();
        }
    }//GEN-LAST:event_tableproductsubtypeMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableproductsubtype;
    // End of variables declaration//GEN-END:variables
}
