/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package adminui;

import java.beans.PropertyVetoException;
import java.util.List;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import model.TO.CompanyInfoTO;
import model.dao.CompanyinfoDAO;
import model.TO.ProductSubTypeTO;
import model.TO.ProductTypeTO;
import model.dao.ProductSubtypeDAO;
import model.TO.ProductInfoTO;
import model.dao.ProductInfoDAO;
import operations.validations;

/**
 *
 * @author user
 */
public class addproductinfo extends javax.swing.JInternalFrame {
    
    private int productid;
    
    public addproductinfo() {
        initComponents();
        jcbcompany.removeAllItems();
        jcbcompany.addItem("Choose Company");
        jcbsubtype.removeAllItems();
        jcbsubtype.addItem("choose sub type");
        List<CompanyInfoTO> type = new CompanyinfoDAO().getAllRecord();
        List<ProductSubTypeTO> typee = new ProductSubtypeDAO().getAllRecord();
        if (type != null && type.size() > 0) {
            for (CompanyInfoTO pt : type) {
                jcbcompany.addItem(pt);
            }
        }
        if (typee != null && typee.size() > 0) {
            for (ProductSubTypeTO pte : typee) {
                jcbsubtype.addItem(pte);
            }
        }
        
    }

    public addproductinfo(ProductInfoTO pt) {
        this();
        
        if (pt != null) {
            
            jtfprice.setText(String.valueOf(pt.getPrice()));
            jtfproductname.setText(pt.getProductname());
            productid = pt.getProductid();
            btnaddproductinfo.setText("update record");
            setTitle("IMS::update productinfo");
            for (int i = 1; i < jcbcompany.getItemCount(); i++) {
                CompanyInfoTO cit = (CompanyInfoTO) jcbcompany.getItemAt(i);
                if (String.valueOf(cit.getCompanyid()).equals(String.valueOf(pt.getCompanyid()))) {
                    jcbcompany.setSelectedIndex(i);
                    break;
                }
                
            }
            for (int i = 1; i < jcbsubtype.getItemCount(); i++) {
                ProductSubTypeTO pst = (ProductSubTypeTO) jcbsubtype.getItemAt(i);
                if (String.valueOf(pst.getSubtypeid()).equals(String.valueOf(pt.getSubtypeid()))) {
                    
                    jcbsubtype.setSelectedIndex(i);
                    break;
                }
                
            }
            
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jcbsubtype = new javax.swing.JComboBox<>();
        jcbcompany = new javax.swing.JComboBox<>();
        jtfprice = new javax.swing.JTextField();
        jtfproductname = new javax.swing.JTextField();
        btnaddproductinfo = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setResizable(true);
        setTitle("IMS::AddProductInfo");

        jLabel2.setFont(new java.awt.Font("KodchiangUPC", 1, 29)); // NOI18N
        jLabel2.setText("Enter Price:");

        jLabel3.setFont(new java.awt.Font("KodchiangUPC", 1, 29)); // NOI18N
        jLabel3.setText("Choose Company:");

        jLabel4.setFont(new java.awt.Font("KodchiangUPC", 1, 29)); // NOI18N
        jLabel4.setText("Choose subtype:");

        jcbsubtype.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jcbcompany.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcbcompany.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbcompanyActionPerformed(evt);
            }
        });

        jtfprice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfpriceKeyTyped(evt);
            }
        });

        jtfproductname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfproductnameActionPerformed(evt);
            }
        });

        btnaddproductinfo.setFont(new java.awt.Font("KodchiangUPC", 1, 30)); // NOI18N
        btnaddproductinfo.setText("Add Product Info");
        btnaddproductinfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnaddproductinfoActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("KodchiangUPC", 1, 29)); // NOI18N
        jLabel5.setText("Enter Product Name:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(260, Short.MAX_VALUE)
                        .addComponent(btnaddproductinfo, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(50, 50, 50)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jcbsubtype, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jcbcompany, 0, 347, Short.MAX_VALUE)
                                            .addComponent(jtfprice)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jtfproductname, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfproductname, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbcompany, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbsubtype, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfprice, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnaddproductinfo, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtfproductnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfproductnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfproductnameActionPerformed

    private void jcbcompanyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbcompanyActionPerformed

    }//GEN-LAST:event_jcbcompanyActionPerformed

    private void btnaddproductinfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnaddproductinfoActionPerformed
        String message = "";
        
        String productname = jtfproductname.getText().trim();
        String price = jtfprice.getText().trim();
        //List rc=new ProductInfoDAO().getAllRecord();
        // for(ProductInfoTO  rci:rc){

        //}
        boolean allvalid = true;
        if (validations.isEmpty(productname)) {
            message = "Enter Product name";
            allvalid = false;
        }
        if (jcbcompany.getSelectedIndex() == 0) {
            message = "Choose Company";
            allvalid = false;
        }
        if (jcbsubtype.getSelectedIndex() == 0) {
            message = "Choose subproduct ";
            allvalid = false;
        }
        
        if (allvalid) {
            CompanyInfoTO pt = (CompanyInfoTO) jcbcompany.getSelectedItem();
            ProductSubTypeTO pct = (ProductSubTypeTO) jcbsubtype.getSelectedItem();
            ProductInfoTO pi = new ProductInfoTO();
            pi.setProductname(productname);
            pi.setCompanyid(pt.getCompanyid());
            pi.setSubtypeid(pct.getSubtypeid());
            pi.setPrice(Float.parseFloat(price));
            ProductInfoDAO action = new ProductInfoDAO();
            if (btnaddproductinfo.getText().contains("Add")) {
                if (action.insertrecord(pi)) {
                    message = "product info is added";
                    JInternalFrame[] jif = getDesktopPane().getAllFrames();
                    if (jif != null) {
                        for (JInternalFrame jf : jif) {
                            if (jf instanceof viewproductinfo) {
                                viewproductinfo vpt = (viewproductinfo) jf;
                                vpt.bindcoursetable();
                                break;
                            }
                            
                        }
                    }
                } else {
                    message = action.geterrormessage();
                    
                }
                
            } else if (btnaddproductinfo.getText().contains("update")) {
                pi.setProductid(productid);
                if (action.updaterecord(pi)) {
                    message = "product info is updated in system";
                } else {
                    message = action.geterrormessage();
                }
                viewproductinfo vpt = new viewproductinfo();
                vpt.setVisible(true);
                getDesktopPane().add(vpt);
                try {
                    vpt.setSelected(true);
                } catch (PropertyVetoException ex) {
                    
                }
                
            }
            JOptionPane.showMessageDialog(this, message);

    }//GEN-LAST:event_btnaddproductinfoActionPerformed
    }
    private void jtfpriceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfpriceKeyTyped
        if (Character.isAlphabetic(evt.getKeyChar())) {
            evt.consume();
        }
    }//GEN-LAST:event_jtfpriceKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnaddproductinfo;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JComboBox<Object> jcbcompany;
    private javax.swing.JComboBox<Object> jcbsubtype;
    private javax.swing.JTextField jtfprice;
    private javax.swing.JTextField jtfproductname;
    // End of variables declaration//GEN-END:variables
}
