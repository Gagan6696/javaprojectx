/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package adminui;

import java.beans.PropertyVetoException;
import java.util.List;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import model.TO.CompanyInfoTO;
import model.TO.ProductInfoTO;
import model.TO.ProductSubTypeTO;
import model.TO.ProductTypeTO;
import model.dao.ProductInfoDAO;
import model.dao.ProductTypeDAO;
import model.TO.ProductStockTO;
import model.dao.ProductStokeDAO;
import operations.validations;

/**
 *
 * @author user
 */
public class addproductstoke extends javax.swing.JInternalFrame {

   
    public addproductstoke() {
        initComponents();
        jcbproductname.removeAllItems();
        jcbproductname.addItem("Choose Product ");
        List<ProductInfoTO> type=new ProductInfoDAO().getAllRecord();
         if (type != null && type.size() > 0) {
            for (ProductInfoTO pt: type) {
                jcbproductname.addItem(pt);
            }
        }
    }
    public addproductstoke(ProductStockTO pt) {
        this();

        if (pt != null) {
             jtfStockprice.setText(String.valueOf(pt.getPrice()));
             jtfquantity.setText(String.valueOf(pt.getQty()));
             cdpexpirydate.setDate(cdpstockdate.getSelectedDate());
             cdpstockdate.setDate(cdpexpirydate.getSelectedDate());
            
            
            btnaddstockinfo.setText("update record");
            setTitle("IMS::update productinfo");
            for (int i = 1; i < jcbproductname.getItemCount(); i++) {
                ProductInfoTO cit = (ProductInfoTO) jcbproductname.getItemAt(i);
                if (String.valueOf(cit.getProductid()).equals(String.valueOf(pt.getProductid()))) {
                    jcbproductname.setSelectedIndex(i);
                    break;
                }

            }
           

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jcbproductname = new javax.swing.JComboBox<>();
        jtfStockprice = new javax.swing.JTextField();
        jtfquantity = new javax.swing.JTextField();
        cdpexpirydate = new adminui.CurrentDatePanel();
        cdpstockdate = new adminui.CurrentDatePanel();
        btnaddstockinfo = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setResizable(true);
        setTitle("IMS::AddStockInfo");

        jLabel1.setFont(new java.awt.Font("KodchiangUPC", 1, 29)); // NOI18N
        jLabel1.setText("Stock Date:");

        jLabel2.setFont(new java.awt.Font("KodchiangUPC", 1, 29)); // NOI18N
        jLabel2.setText("Quantity:");

        jLabel3.setFont(new java.awt.Font("KodchiangUPC", 1, 29)); // NOI18N
        jLabel3.setText("Choose Product Name:");

        jLabel4.setFont(new java.awt.Font("KodchiangUPC", 1, 29)); // NOI18N
        jLabel4.setText("Expiry date:");

        jLabel6.setFont(new java.awt.Font("KodchiangUPC", 1, 29)); // NOI18N
        jLabel6.setText("price:");

        jcbproductname.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcbproductname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbproductnameActionPerformed(evt);
            }
        });

        jtfStockprice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfStockpriceKeyTyped(evt);
            }
        });

        jtfquantity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfquantityKeyTyped(evt);
            }
        });

        btnaddstockinfo.setFont(new java.awt.Font("KodchiangUPC", 1, 36)); // NOI18N
        btnaddstockinfo.setText("Add Stock Info");
        btnaddstockinfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnaddstockinfoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtfquantity))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtfStockprice, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cdpexpirydate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jcbproductname, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cdpstockdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap(134, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnaddstockinfo, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(105, 105, 105))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbproductname, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cdpstockdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfquantity, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfStockprice, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cdpexpirydate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnaddstockinfo, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jcbproductnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbproductnameActionPerformed
        
    }//GEN-LAST:event_jcbproductnameActionPerformed

    private void btnaddstockinfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnaddstockinfoActionPerformed
         String message = "";
        String price = jtfStockprice.getText().trim();
        String quantity = jtfquantity.getText().trim();
        boolean allvalid = true;
        if (validations.isEmpty(price)) {
            message = "Enter Price";
            allvalid = false;
        }
          if (validations.isEmpty(quantity)) {
            message = "Enter quantity";
            allvalid = false;
        }
            if (cdpstockdate.getSelectedDate()==null) {
            message = "Select Stock date";
            allvalid = false;
        }
              if (cdpexpirydate.getSelectedDate()==null) {
            message = "select expiry date";
            allvalid = false;
        }
        if (jcbproductname.getSelectedIndex() == 0) {
            message = "Choose product";
            allvalid = false;
        }
       
        if (allvalid) {
            ProductInfoTO pi = (ProductInfoTO) jcbproductname.getSelectedItem();
            
            ProductStockTO ps = new ProductStockTO();
            ps.setQty(Integer.parseInt(quantity));
            ps.setPrice(Integer.parseInt(price));
            ps.setProductid(pi.getProductid());
            ps.setStockdate(cdpstockdate.getSelectedDate());
            ps.setExpirydate(cdpexpirydate.getSelectedDate());
           
            ProductStokeDAO action = new ProductStokeDAO();
              if (btnaddstockinfo.getText().contains("Add")) {
            if (action.insertrecord(ps)) {
                message = "stock info is added";
                JInternalFrame[] jif = getDesktopPane().getAllFrames();
                    if (jif != null) {
                        for (JInternalFrame jf : jif) {
                            if (jf instanceof viewstockinfo) {
                                viewstockinfo vpt = (viewstockinfo) jf;
                                vpt.bindcoursetable();
                                break;
                            }

                        }
                    }
            } else {
                message = action.geterrormessage();

            }

        }else if (btnaddstockinfo.getText().contains("update")) {
          ps.setQty(Integer.parseInt(quantity));
            ps.setPrice(Integer.parseInt(price));
            ps.setProductid(pi.getProductid());
            ps.setStockdate(cdpstockdate.getSelectedDate());
            ps.setExpirydate(cdpexpirydate.getSelectedDate());
           
            pi.setPrice(Integer.parseInt(price));
                if (action.updaterecord(ps)) {
                    message = "stockinfo is updated in system";
                } else {
                    message = action.geterrormessage();
                }
                viewproductinfo vpt = new viewproductinfo();
                vpt.setVisible(true);
                getDesktopPane().add(vpt);
                try {
                    vpt.setSelected(true);
                } catch (PropertyVetoException ex) {

                }

            }
        JOptionPane.showMessageDialog(this, message);

    }                                                 
    
    }//GEN-LAST:event_btnaddstockinfoActionPerformed

    private void jtfquantityKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfquantityKeyTyped
       if (Character.isAlphabetic(evt.getKeyChar())) {
            evt.consume();
    }//GEN-LAST:event_jtfquantityKeyTyped
    }
    private void jtfStockpriceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfStockpriceKeyTyped
       if (Character.isAlphabetic(evt.getKeyChar())) {
            evt.consume();
    }//GEN-LAST:event_jtfStockpriceKeyTyped
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnaddstockinfo;
    private adminui.CurrentDatePanel cdpexpirydate;
    private adminui.CurrentDatePanel cdpstockdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JComboBox<Object> jcbproductname;
    private javax.swing.JTextField jtfStockprice;
    private javax.swing.JTextField jtfquantity;
    // End of variables declaration//GEN-END:variables
}
